import 'dart:async';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_barcode_scanner/flutter_barcode_scanner.dart';
import 'package:flutter_material_pickers/helpers/show_number_picker.dart';
import 'package:health_app_fyp/BarcodeScanner/scan_database.dart';
import 'package:intl/intl.dart';
import 'dart:convert';
import 'package:material_design_icons_flutter/material_design_icons_flutter.dart';
import 'package:http/http.dart' as http;
import 'package:openfoodfacts/model/KnowledgePanel.dart';
import 'package:openfoodfacts/model/NutrientLevels.dart';
import 'package:openfoodfacts/model/ProductResult.dart';
import 'package:openfoodfacts/openfoodfacts.dart';

class BarcodeScanSecond extends StatefulWidget {
  const BarcodeScanSecond({Key? key}) : super(key: key);

  @override
  _BarcodeScanSecondState createState() => _BarcodeScanSecondState();
}

class _BarcodeScanSecondState extends State<BarcodeScanSecond> {
  String _scannedBarcode = 'Unknown';
  DatabaseManager helper = DatabaseManager();
  @override
  void initState() {
    super.initState();
    runBarcodeScanner();
  }

  String? Name;
  String? ingredientsT;
  double? energy_100g_kcal;

  // Platform messages are asynchronous, so we initialize in an async method.
  Future<void> scanBarcode() async {
    String barcodeScanRes;
    // Platform messages may fail, so we use a try/catch PlatformException.
    try {
      barcodeScanRes = await FlutterBarcodeScanner.scanBarcode(
          "#ff6666", "Cancel", true, ScanMode.BARCODE);
      // ignore: avoid_print
      print(barcodeScanRes);
    } on PlatformException {
      barcodeScanRes = 'Failed to get platform version.';
    }

    // If the widget was removed from the tree while the asynchronous platform
    // message was in flight, we want to discard the reply rather than calling
    // setState to update our non-existent appearance.
    if (!mounted) return;

    setState(() {
      _scannedBarcode = barcodeScanRes;

      String barcode = barcodeScanRes;
    });

    String barcode = barcodeScanRes;

    ProductQueryConfiguration configurations = ProductQueryConfiguration(
        barcode,
        language: OpenFoodFactsLanguage.ENGLISH,
        fields: [
          ProductField.NAME,
          ProductField.NUTRIMENTS,
          ProductField.INGREDIENTS_TEXT,
          ProductField.INGREDIENTS,
          ProductField.ADDITIVES,
          ProductField.NUTRIENT_LEVELS,
          ProductField.NUTRIMENT_ENERGY_UNIT
        ]);

    ProductResult result = await OpenFoodAPIClient.getProduct(
      configurations,
    );

    if (result.status != 1) {
      print(
          "Error retreiving the product with barcode : $barcode If the barcode number here matches the one on your food item , the item may not exist in the database. Please visit openfoodfacts.org ");
      return;

      // ${result.status!.errorVerbose}
    } else {
      String? Name = result.product!.productName;
      //String? Calories = result.product!.nutrimentEnergyUnit;

      String? ingredientsT = result.product!.ingredientsText;
      // List<Ingredient>? ingredients = result!.product!.ingredients;

      double? energy_100g = result.product!.nutriments!.energy;

      if (energy_100g == null) {
        double? energy_100g_kcal = 1;
      } else {
        double? energy_100g_kcal = energy_100g / 4.184;
        //divide the energy value by 4.184

        // double? energy_100g_kcal = energy_100g! / 4.184;
        //divide the energy value by 4.184
        double? fat_100g = result.product!.nutriments!.fat;

        double? salt_serving = result.product!.nutriments!.saltServing;
        double? fat_serving = result.product!.nutriments!.fatServing;

        String uid = FirebaseAuth.instance.currentUser!.uid;
        String inputTime =
            DateFormat('yyyy-MM-dd KK:mm:ss a').format(DateTime.now());
//Level? sugars_level = result.product!.nutrientLevels!.levels[NutrientLevels.NUTRIENT_SUGARS];

        print(Name);
        print(ingredientsT);
        print(energy_100g_kcal.toStringAsFixed(2));

        FirebaseFirestore.instance.collection('Food').add({
          'Food Name': Name,
          'Date/Time': inputTime,
          'Calories per 100g': energy_100g_kcal.toStringAsFixed(2),
          'userID': uid
        });

        //addToDB(Name, ingredientsT, energy_100g_kcal, inputTime);
      }
    }
  }
  // Future<void> getFoodName() async {
  //   // Platform messages may fail, so we use a try/catch PlatformException.
  //   try {
  //     food = fetchAnItem(_scannedBarcode);
  //     // ignore: avoid_print
  //     print('GET FOOD METHOD CALLED');
  //     // ignore: avoid_print
  //     print((await food));
  //   // ignore: empty_catches
  //   } on PlatformException {
  //   }

  //   // If the widget was removed from the tree while the asynchronous platform
  //   // message was in flight, we want to discard the reply rather than calling
  //   // setState to update our non-existent appearance.
  //   if (!mounted) return;

  //   setState(() {
  //   });
  // }

  Future<void> runBarcodeScanner() async {
    scanBarcode();
  }

  // Future<void> addFood() async {
  //   helper.insertAnItem(await food!);
  //   exitscreen(true);
  // }

  void exitscreen(bool reload) {
    Navigator.pop(context, reload);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(title: const Text('Add Food')),
        body: Builder(builder: (BuildContext context) {
          return Container(
              alignment: Alignment.center,
              child: Flex(
                  direction: Axis.vertical,
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: <Widget>[
                    Card(
                      child: ListTile(
                        title: const Text('Scanned Barcode Value'),
                        subtitle: Text(_scannedBarcode),
                        leading: const Icon(MdiIcons.barcodeScan, size: 50.0),
                      ),
                    ),
                  ]));
        }));
  }
}
  // ),
//                     ),
//                     Column(
//                         mainAxisAlignment: MainAxisAlignment.center,
//                         crossAxisAlignment: CrossAxisAlignment.center,
//                         children: [
//                           Card(
//                             child: ListTile(
//                               title: Text(""),
//                               subtitle: Text(
//                                 ' kcal per serving',
//                               ),
//                               trailing: const Icon(MdiIcons.food, size: 50.0),
//                             ),
//                           ),
//                           Card(
//                             child: ListTile(
//                               title: Text((() {
//                                         var a = 1;
//                                         if (a == 1) {
//                                           return 'serving (';
//                                         } else {
//                                           return 'servings (';
//                                         }
//                                         // "Servings";
//                                       }()) +
//                                       "Quantity"
//                                   //${(snapshot.data!.servingQty).toStringAsFixed(2)} ${snapshot.data!.servingUnit})

//                                   ),
//                               subtitle: const Text("Calories"
//                                   //'${(snapshot.data!.calories * snapshot.data!.servingConsumed).toString()} Calories')
//                                   ),
//                               leading: SizedBox(
//                                   width: 40,
//                                   // ignore: deprecated_member_use
//                                   child: OutlineButton(
//                                     borderSide: const BorderSide(
//                                         width: 2, color: Colors.blueGrey),
//                                     onPressed: () => showMaterialNumberPicker(
//                                       context: context,
//                                       title: "Number of Servings",
//                                       maxNumber: 20,
//                                       minNumber: 1,
//                                       selectedNumber: 2
//                                       //  snapshot
//                                       //     .data!.servingConsumed
//                                       ,
//                                       onChanged: (value) => setState(() => null
//                                           // snapshot.data!
//                                           //     .servingConsumed
//                                           //     = value
//                                           ),
//                                     ),
//                                     child: Text("Howiye"
//                                         // snapshot
//                                         //   .data!.servingConsumed
//                                         //   .toString()

//                                         ),
//                                   )),
//                             ),
//                           ),
//                           ButtonBar(
//                             children: [
//                               // ignore: deprecated_member_use
//                               FlatButton(
//                                 onPressed: () => exitscreen(false),
//                                 child: const Text("Go Back"),
//                               ),
//                               // ignore: deprecated_member_use
//                               RaisedButton(
//                                 onPressed: () => exitscreen(true),
//                                 //addFood()
//                                 //                              FirebaseFirestore.instance.collection('Food').add({
//                                 //   'Food Name': Name,
//                                 //   'Date/Time': inputTime,
//                                 //   'Calories per 100g': energy_100g_kcal?.toStringAsFixed(2),
//                                 //   'userID': uid
//                                 // });

//                                 child: const Text("Add To Total"),
//                               ),
//                             ],
//                             alignment: MainAxisAlignment.center,
//                           )
//                         ])
//                   ]));
//         }));
//   }
// }

//                   //         } else {
//                   //           return Column(children: [
//                   //             const Text("Food Not Found or an error occured"),
//                   //             ButtonBar(
//                   //               children: [
//                   //                 // ignore: deprecated_member_use
//                   //                 FlatButton(
//                   //                   onPressed: () => exitscreen(false),
//                   //                   child: const Text("Go Back"),
//                   //                 ),
//                   //                 // ignore: deprecated_member_use
//                   //                 RaisedButton(
//                   //                     onPressed: () => runBarcodeScanner(),
//                   //                     child: const Text("Retry Scan")),
//                   //               ],
//                   //               alignment: MainAxisAlignment.center,
//                   //             )
//                   //           ]);
//                   //         }
//                   //       } else if (snapshot.hasError) {
//                   //         return Column(children: [
//                   //           Text("${snapshot.error}"),
//                   //           ButtonBar(
//                   //             children: [
//                   //               // ignore: deprecated_member_use
//                   //               FlatButton(
//                   //                 onPressed: () => exitscreen(false),
//                   //                 child: const Text("Go Back"),
//                   //               ),
//                   //               // ignore: deprecated_member_use
//                   //               RaisedButton(
//                   //                   onPressed: () => runBarcodeScanner(),
//                   //                   child: const Text("Retry Scan")),
//                   //             ],
//                   //             alignment: MainAxisAlignment.center,
//                   //           )
//                   //         ]);
//                   //       }

//                   //       return const CircularProgressIndicator();
//                   //     },
//                   //   ),
//                   // ]));
// //         }));
// //   }
// // }

